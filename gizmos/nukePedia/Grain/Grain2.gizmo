#! /local/spitzak_swdevl/Apps/Nuke/nuke/objects/linux-32-x86-debug-340/Bundle/Nuke5.2 -nx
version 5.1000
Gizmo {
 label "Kodak 5248"
 help "Adds synthetic grain. Push \"presets\" to get predefined types of grain, these are the correct size for 2K scans.\n\nYou can also adjust the sliders to match a sample piece of grain. Find a sample with a rather constant background, blur it to remove the grain, and use as input to this. View with a wipe in the viewer so you can make a match. It helps to view and match each of the red, green, blue seperately."
 addUserKnob {20 "" l User}
 addUserKnob {3 seed t "Change this value to make different instances of this operator produce different noise"}
 seed 134
 addUserKnob {35 presets l "" -STARTLINE M {"presets/Kodak 5248" "knobs this \{red_size 3.30 green_size 2.90 blue_size 2.5 red_i 0.60 green_i 0.60 blue_i 0.60 red_m 0.42 green_m 0.46 blue_m 0.85 black 0.00 label \{Kodak 5248\}\}" "presets/Kodak 5279" "knobs this \{red_size 2.70 green_size 2.60 blue_size 2.40 red_i 1.00 green_i 0.76 blue_i 0.65 red_m 0.37 green_m 0.60 blue_m 1.65 black 0.00 label \{Kodak 5279\}\}" "presets/Kodak FX214" "knobs this \{red_size 1.87 green_size 2.60 blue_size 2.44 red_i 1 green_i 0.76 blue_i 0.79 red_m 0.41 green_m 0.60 blue_m 1.80 black 0.00 label \{Kodak FX214\}\}" "presets/Kodak GT5274" "knobs this \{red_size 0.04 green_size 0.10 blue_size 0.90 red_i 0.90 green_i 0.76 blue_i 0.81 red_m 0.49 green_m 0.50 blue_m 1.55 black 0.00 label \{Kodak GT5274\}\}" "presets/Kodak 5217" "knobs this \{red_size 0.23 green_size 1.20 blue_size 1.40 red_i 0.60 green_i 0.86 blue_i 0.60 red_m 0.48 green_m 0.42 blue_m 0.87 black 0.00 label \{Kodak 5217\}\}" "presets/Kodak 5218" "knobs this \{red_size 0.10 green_size 1.60 blue_size 1.91 red_i 0.60 green_i 0.86 blue_i 0.73 red_m 0.38 green_m 0.17 blue_m 0.87 black 0.00 label \{Kodak 5218\}\}" presets/other "knobs this \{label other\}"}}
 addUserKnob {26 "" l "@b;Size"}
 addUserKnob {14 red_size l red R 0 100}
 red_size 3.3
 addUserKnob {14 green_size l green R 0 100}
 green_size 2.9
 addUserKnob {14 blue_size l blue R 0 100}
 blue_size 2.5
 addUserKnob {26 "" l "@b;Irregularity"}
 addUserKnob {7 red_i l red}
 red_i 0.6
 addUserKnob {7 green_i l green}
 green_i 0.6
 addUserKnob {7 blue_i l blue}
 blue_i 0.6
 addUserKnob {26 "" l "@b;Intensity"}
 addUserKnob {7 red_m l red t "Amount of grain to add to a white pixel"}
 red_m 0.416
 addUserKnob {7 green_m l green}
 green_m 0.46
 addUserKnob {7 blue_m l blue}
 blue_m 0.85
 addUserKnob {18 black t "Amount of grain to add everywhere"}
 addUserKnob {18 minimum t "Minimum black level" R 0 0.01}
 addUserKnob {26 "" l "@b;Mask"}
 addUserKnob {6 maskgrain l "Apply only through alpha" -STARTLINE}
 maskgrain true
 addUserKnob {41 maskinvert l "Invert alpha" -STARTLINE T Copy1.invert_mask}
}
 Input {
  inputs 0
  name Input1
  xpos 0
 }
set Na5ca9b8 [stack 0]
 Noise {
  output {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  cliptype {no clip}
  replace true
  size {{parent.red_size.w} {parent.red_size.h}}
  zoffset {{frame+seed+red_i/2}}
  octaves 2
  gamma 1
  xrotate {{red_i*45}}
  yrotate {{red_i*45}}
  name red
  xpos 220
 }
 Noise {
  output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  cliptype {no clip}
  replace true
  size {{parent.green_size.w} {parent.green_size.h}}
  zoffset {{frame+2*seed+green_i/2}}
  octaves 2
  gamma 1
  xrotate {{green_i*45}}
  yrotate {{green_i*45}}
  name green
  xpos 220
  ypos 43
 }
 Noise {
  output {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  cliptype {no clip}
  replace true
  size {{parent.blue_size.w} {parent.blue_size.h}}
  zoffset {{frame+3*seed+blue_i/2}}
  octaves 2
  gamma 1
  xrotate {{blue_i*45}}
  yrotate {{blue_i*45}}
  name blue
  xpos 220
  ypos 86
 }
push $Na5ca9b8
 MergeExpression {
  inputs 2
  expr0 max(minimum.r,r+(2*Ar-1)*(r*red_m+black.r))
  expr1 max(minimum.g,g+(2*Ag-1)*(g*green_m+black.g))
  expr2 max(minimum.b,b+(2*Ab-1)*(b*blue_m+black.b))
  name MergeExpression1
  xpos 220
  ypos 168
 }
set Na5ff9d0 [stack 0]
push $Na5ca9b8
 Copy {
  inputs 2
  channels rgb
  maskFrom input
  name Copy1
  xpos 0
  ypos 154
 }
push $Na5ff9d0
 Switch {
  inputs 2
  which {{maskgrain}}
  name Switch1
  selected true
  xpos 0
  ypos 241
 }
 Output {
  name Output1
  xpos 0
  ypos 286
 }
end_group
